{"ast":null,"code":"// import React from 'react';\n// import ImageCard from '../components/ImageCard.js';\n// class Uploader extends React.Component {\n//   constructor() {\n//     super();\n//     this.state ={\n//       file: {name: null},\n//       images: []\n//     };\n//     this.onFormSubmit = this.onFormSubmit.bind(this);\n//     this.onChange = this.onChange.bind(this);\n//   }\n//   componentWillMount() {\n//     this.getImageData();\n//   }\n//   onFormSubmit(e) {\n//     e.preventDefault();\n//     this.fileUpload(this.state.file);\n//   }\n//   onChange(e) {\n//     this.setState({file:e.target.files[0]})\n//   }\n//   getImageData() {\n//     const url = 'http://localhost:3001/file';\n//     fetch(url)\n//     .then(response => {\n//       if(response.ok) return response.json();\n//       // throw new Error('Request failed.');\n//       return [];app.get('/file/:filename', function(req, res){\n//   gfs.collection('ctFiles'); //set collection name to lookup into\n//   /** First check if file exists */\n//   gfs.files.find({filename: req.params.filename}).toArray(function(err, files){\n//     if(!files || files.length === 0){\n//       return res.status(404).json({\n//         responseCode: 1,\n//         responseMessage: \"error\"\n//       });\n//     }\n//     /** create read stream */\n//     const readstream = gfs.createReadStream({\n//       filename: files[0].filename,\n//       root: \"ctFiles\"\n//     });\n//     /** set the proper content type */\n//     res.set('Content-Type', files[0].contentType)\n//     /** return response */\n//     return readstream.pipe(res);\n//   });\n// });\n// app.get('/file', function(req, res){\n//   gfs.collection('ctFiles'); //set collection name to lookup into\n//   gfs.files.find().toArray(function(err, files){\n//     if(!files || files.length === 0){\n//       return res.status(404).json({\n//         responseCode: 1,\n//         responseMessage: \"error\"\n//       });\n//     }\n//     res.send(JSON.stringify(files));\n//   });\n// });\n//     })\n//     .then(data => { this.setState({images: data}); });\n//   }\n//   fileUpload(file){\n//     const url = 'http://localhost:3001/upload';\n//     const formData = new FormData();\n//     formData.append('file',file)\n//     fetch(url, {\n//         mode: 'no-cors',\n//         method: \"POST\",\n//         body: formData\n//       })\n//     .then(res => { this.getImageData(); });\n//   }\n//   render() {\n//     let images;\n//     if(this.state.images.length > 0) {\n//       images = this.state.images.map( i => {\n//         return (\n//           <ImageCard key={i._id} alt={i.metadata.originalname} src={'http://localhost:3001/file/'+i.filename} date={i.uploadDate} />\n//         );\n//       });\n//     } else {\n//       images = <h2 className=\"subtitle\">No images :(</h2>;\n//     }\n//     return (\n//       <section className=\"section\">\n//         <div className=\"container  is-fluid\">\n//           <h1 className=\"title\">Photo Gallery</h1>\n//           <div className=\"file is-info has-name is-fullwidth\">\n//             <label className=\"file-label\">\n//               <input className=\"file-input\" type=\"file\" name=\"resume\" onChange={this.onChange} />\n//               <span className=\"file-cta\">\n//                 <span className=\"file-icon\">\n//                   <i className=\"fas fa-upload\"></i>\n//                 </span>\n//                 <span className=\"file-label\">\n//                   Choose a file…\n//                 </span>\n//               </span>\n//               <span className=\"file-name\">\n//                 {this.state.file.name}\n//               </span>\n//             </label>\n//           </div>\n//           <br/>\n//           <button className=\"button is-primary\" onClick={this.onFormSubmit} type=\"submit\">Upload</button>\n//         </div>\n//         <hr/>\n//         <div className=\"container is-fluid\">\n//           <div className=\"columns is-multiline\">\n//             {images}\n//           </div>\n//         </div>\n//       </section>\n//     );\n//   }\n//  }\n// export default Uploader;","map":{"version":3,"sources":["/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/src/pages/Uploader.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\n// import ImageCard from '../components/ImageCard.js';\n\n// class Uploader extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state ={\n//       file: {name: null},\n//       images: []\n//     };\n\n//     this.onFormSubmit = this.onFormSubmit.bind(this);\n//     this.onChange = this.onChange.bind(this);\n//   }\n\n//   componentWillMount() {\n//     this.getImageData();\n//   }\n\n//   onFormSubmit(e) {\n//     e.preventDefault();\n//     this.fileUpload(this.state.file);\n//   }\n\n//   onChange(e) {\n//     this.setState({file:e.target.files[0]})\n//   }\n\n//   getImageData() {\n//     const url = 'http://localhost:3001/file';\n\n//     fetch(url)\n//     .then(response => {\n//       if(response.ok) return response.json();\n//       // throw new Error('Request failed.');\n//       return [];app.get('/file/:filename', function(req, res){\n//   gfs.collection('ctFiles'); //set collection name to lookup into\n\n//   /** First check if file exists */\n//   gfs.files.find({filename: req.params.filename}).toArray(function(err, files){\n//     if(!files || files.length === 0){\n//       return res.status(404).json({\n//         responseCode: 1,\n//         responseMessage: \"error\"\n//       });\n//     }\n//     /** create read stream */\n//     const readstream = gfs.createReadStream({\n//       filename: files[0].filename,\n//       root: \"ctFiles\"\n//     });\n//     /** set the proper content type */\n//     res.set('Content-Type', files[0].contentType)\n//     /** return response */\n//     return readstream.pipe(res);\n//   });\n// });\n\n// app.get('/file', function(req, res){\n//   gfs.collection('ctFiles'); //set collection name to lookup into\n\n//   gfs.files.find().toArray(function(err, files){\n//     if(!files || files.length === 0){\n//       return res.status(404).json({\n//         responseCode: 1,\n//         responseMessage: \"error\"\n//       });\n//     }\n//     res.send(JSON.stringify(files));\n//   });\n// });\n//     })\n//     .then(data => { this.setState({images: data}); });\n//   }\n\n\n//   fileUpload(file){\n//     const url = 'http://localhost:3001/upload';\n//     const formData = new FormData();\n//     formData.append('file',file)\n\n//     fetch(url, {\n//         mode: 'no-cors',\n//         method: \"POST\",\n//         body: formData\n//       })\n//     .then(res => { this.getImageData(); });\n//   }\n\n//   render() {\n//     let images;\n//     if(this.state.images.length > 0) {\n//       images = this.state.images.map( i => {\n//         return (\n//           <ImageCard key={i._id} alt={i.metadata.originalname} src={'http://localhost:3001/file/'+i.filename} date={i.uploadDate} />\n//         );\n//       });\n//     } else {\n//       images = <h2 className=\"subtitle\">No images :(</h2>;\n//     }\n\n//     return (\n//       <section className=\"section\">\n//         <div className=\"container  is-fluid\">\n//           <h1 className=\"title\">Photo Gallery</h1>\n//           <div className=\"file is-info has-name is-fullwidth\">\n//             <label className=\"file-label\">\n//               <input className=\"file-input\" type=\"file\" name=\"resume\" onChange={this.onChange} />\n//               <span className=\"file-cta\">\n//                 <span className=\"file-icon\">\n//                   <i className=\"fas fa-upload\"></i>\n//                 </span>\n//                 <span className=\"file-label\">\n//                   Choose a file…\n//                 </span>\n//               </span>\n//               <span className=\"file-name\">\n//                 {this.state.file.name}\n//               </span>\n//             </label>\n//           </div>\n//           <br/>\n//           <button className=\"button is-primary\" onClick={this.onFormSubmit} type=\"submit\">Upload</button>\n//         </div>\n//         <hr/>\n//         <div className=\"container is-fluid\">\n//           <div className=\"columns is-multiline\">\n//             {images}\n//           </div>\n//         </div>\n//       </section>\n//     );\n//   }\n//  }\n\n// export default Uploader;\n"]},"metadata":{},"sourceType":"module"}
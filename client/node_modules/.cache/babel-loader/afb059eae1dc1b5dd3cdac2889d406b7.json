{"ast":null,"code":"import _classCallCheck from \"/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/src/pages/Uploader.js\";\nimport React from 'react';\nimport ImageCard from './ImageCard';\n\nvar Uploader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Uploader, _React$Component);\n\n  function Uploader() {\n    var _this;\n\n    _classCallCheck(this, Uploader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Uploader).call(this));\n    _this.state = {\n      file: {\n        name: null\n      },\n      images: []\n    };\n    _this.onFormSubmit = _this.onFormSubmit.bind(_assertThisInitialized(_this));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Uploader, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getImageData();\n    }\n  }, {\n    key: \"onFormSubmit\",\n    value: function onFormSubmit(e) {\n      e.preventDefault();\n      this.fileUpload(this.state.file);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState({\n        file: e.target.files[0]\n      });\n    }\n  }, {\n    key: \"getImageData\",\n    value: function getImageData() {\n      var _this2 = this;\n\n      var url = 'http://localhost:3001/file';\n      fetch(url).then(function (response) {\n        if (response.ok) return response.json(); // throw new Error('Request failed.');\n\n        return [];\n      }).then(function (data) {\n        _this2.setState({\n          images: data\n        });\n      });\n    }\n  }, {\n    key: \"fileUpload\",\n    value: function fileUpload(file) {\n      var _this3 = this;\n\n      var url = 'http://localhost:3001/upload';\n      var formData = new FormData();\n      formData.append('file', file);\n      fetch(url, {\n        mode: 'no-cors',\n        method: \"POST\",\n        body: formData\n      }).then(function (res) {\n        _this3.getImageData();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var images;\n\n      if (this.state.images.length > 0) {\n        images = this.state.images.map(function (i) {\n          return React.createElement(ImageCard, {\n            key: i._id,\n            alt: i.metadata.originalname,\n            src: 'http://localhost:3001/file/' + i.filename,\n            date: i.uploadDate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          });\n        });\n      } else {\n        images = React.createElement(\"h2\", {\n          className: \"subtitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"No images :(\");\n      }\n\n      return React.createElement(\"section\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container  is-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Photo Gallery\"), React.createElement(\"div\", {\n        className: \"file is-info has-name is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"file-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"file-input\",\n        type: \"file\",\n        name: \"resume\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"file-cta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"file-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"file-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Choose a file\\u2026\")), React.createElement(\"span\", {\n        className: \"file-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.file.name))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button is-primary\",\n        onClick: this.onFormSubmit,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Upload\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container is-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns is-multiline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, images)));\n    }\n  }]);\n\n  return Uploader;\n}(React.Component);\n\nexport default Uploader;","map":{"version":3,"sources":["/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/src/pages/Uploader.js"],"names":["React","ImageCard","Uploader","state","file","name","images","onFormSubmit","bind","onChange","getImageData","e","preventDefault","fileUpload","setState","target","files","url","fetch","then","response","ok","json","data","formData","FormData","append","mode","method","body","res","length","map","i","_id","metadata","originalname","filename","uploadDate","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ImageCard from './ImageCard';\n\nclass Uploader extends React.Component {\n  constructor() {\n    super();\n\n    this.state ={\n      file: {name: null},\n      images: []\n    };\n\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.getImageData();\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    this.fileUpload(this.state.file);\n  }\n\n  onChange(e) {\n    this.setState({file:e.target.files[0]})\n  }\n\n  getImageData() {\n    const url = 'http://localhost:3001/file';\n\n    fetch(url)\n    .then(response => {\n      if(response.ok) return response.json();\n      // throw new Error('Request failed.');\n      return [];\n    })\n    .then(data => { this.setState({images: data}); });\n  }\n\n\n  fileUpload(file){\n    const url = 'http://localhost:3001/upload';\n    const formData = new FormData();\n    formData.append('file',file)\n\n    fetch(url, {\n        mode: 'no-cors',\n        method: \"POST\",\n        body: formData\n      })\n    .then(res => { this.getImageData(); });\n  }\n\n  render() {\n    let images;\n    if(this.state.images.length > 0) {\n      images = this.state.images.map( i => {\n        return (\n          <ImageCard key={i._id} alt={i.metadata.originalname} src={'http://localhost:3001/file/'+i.filename} date={i.uploadDate} />\n        );\n      });\n    } else {\n      images = <h2 className=\"subtitle\">No images :(</h2>;\n    }\n\n    return (\n      <section className=\"section\">\n        <div className=\"container  is-fluid\">\n          <h1 className=\"title\">Photo Gallery</h1>\n          <div className=\"file is-info has-name is-fullwidth\">\n            <label className=\"file-label\">\n              <input className=\"file-input\" type=\"file\" name=\"resume\" onChange={this.onChange} />\n              <span className=\"file-cta\">\n                <span className=\"file-icon\">\n                  <i className=\"fas fa-upload\"></i>\n                </span>\n                <span className=\"file-label\">\n                  Choose a file…\n                </span>\n              </span>\n              <span className=\"file-name\">\n                {this.state.file.name}\n              </span>\n            </label>\n          </div>\n          <br/>\n          <button className=\"button is-primary\" onClick={this.onFormSubmit} type=\"submit\">Upload</button>\n        </div>\n        <hr/>\n        <div className=\"container is-fluid\">\n          <div className=\"columns is-multiline\">\n            {images}\n          </div>\n        </div>\n      </section>\n    );\n  }\n }\n\nexport default Uploader;\n"]},"metadata":{},"sourceType":"module"}
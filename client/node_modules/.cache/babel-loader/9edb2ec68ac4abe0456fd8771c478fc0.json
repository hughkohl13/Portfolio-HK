{"ast":null,"code":"import _classCallCheck from \"/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/src/pages/Uploader.js\";\nimport React, { Component } from 'react';\nimport Notifications, { notify } from 'react-notify-toast'; // import Spinner from './Spinner'\n\nimport Images from './Images';\nimport Buttons from './Buttons';\nimport WakeUp from './WakeUp';\nimport { API_URL } from './config';\nimport './Uploader.css';\nvar toastColor = {\n  background: '#505050',\n  text: '#fff'\n};\n\nvar Uploader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Uploader, _Component);\n\n  function Uploader() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Uploader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Uploader)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      uploading: false,\n      images: []\n    };\n    _this.toast = notify.createShowQueue();\n\n    _this.onChange = function (e) {\n      var errs = [];\n      var files = Array.from(e.target.files);\n\n      if (files.length > 3) {\n        var msg = 'Only 3 images can be uploaded at a time';\n        return _this.toast(msg, 'custom', 2000, toastColor);\n      }\n\n      var formData = new FormData();\n      var types = ['image/png', 'image/jpeg', 'image/gif'];\n      files.forEach(function (file, i) {\n        if (types.every(function (type) {\n          return file.type !== type;\n        })) {\n          errs.push(\"'\".concat(file.type, \"' is not a supported format\"));\n        }\n\n        if (file.size > 150000) {\n          errs.push(\"'\".concat(file.name, \"' is too large, please pick a smaller file\"));\n        }\n\n        formData.append(i, file);\n      });\n\n      if (errs.length) {\n        return errs.forEach(function (err) {\n          return _this.toast(err, 'custom', 2000, toastColor);\n        });\n      }\n\n      _this.setState({\n        uploading: true\n      });\n\n      fetch(\"\".concat(API_URL, \"/image-upload\"), {\n        method: 'POST',\n        body: formData\n      }).then(function (res) {\n        if (!res.ok) {\n          throw res;\n        }\n\n        return res.json();\n      }).then(function (images) {\n        _this.setState({\n          uploading: false,\n          images: images\n        });\n      }).catch(function (err) {\n        err.json().then(function (e) {\n          _this.toast(e.message, 'custom', 2000, toastColor);\n\n          _this.setState({\n            uploading: false\n          });\n        });\n      });\n    };\n\n    _this.filter = function (id) {\n      return _this.state.images.filter(function (image) {\n        return image.public_id !== id;\n      });\n    };\n\n    _this.removeImage = function (id) {\n      _this.setState({\n        images: _this.filter(id)\n      });\n    };\n\n    _this.onError = function (id) {\n      _this.toast('Oops, something went wrong', 'custom', 2000, toastColor);\n\n      _this.setState({\n        images: _this.filter(id)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Uploader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"\".concat(API_URL, \"/wake-up\")).then(function (res) {\n        if (res.ok) {\n          return _this2.setState({\n            loading: false\n          });\n        }\n\n        var msg = 'Something is went wrong with Heroku';\n\n        _this2.toast(msg, 'custom', 2000, toastColor);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          uploading = _this$state.uploading,\n          images = _this$state.images;\n\n      var content = function content() {\n        switch (true) {\n          case loading:\n            return React.createElement(WakeUp, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110\n              },\n              __self: this\n            });\n\n          case uploading:\n            return \"Loading ...\";\n\n          case images.length > 0:\n            return React.createElement(Images, {\n              images: images,\n              removeImage: _this3.removeImage,\n              onError: _this3.onError,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114\n              },\n              __self: this\n            });\n\n          default:\n            return React.createElement(Buttons, {\n              onChange: _this3.onChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 120\n              },\n              __self: this\n            });\n        }\n      };\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Notifications, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, content()));\n    }\n  }]);\n\n  return Uploader;\n}(Component);\n\nexport { Uploader as default };","map":{"version":3,"sources":["/Users/hughkohl/Documents/Documents/Coding_Bootcamp/Holder/UCBSAN201809FSF2/20-react/01-Activities/03-Day/11-Stu_ReactRouter/Solved/client/src/pages/Uploader.js"],"names":["React","Component","Notifications","notify","Images","Buttons","WakeUp","API_URL","toastColor","background","text","Uploader","state","loading","uploading","images","toast","createShowQueue","onChange","e","errs","files","Array","from","target","length","msg","formData","FormData","types","forEach","file","i","every","type","push","size","name","append","err","setState","fetch","method","body","then","res","ok","json","catch","message","filter","id","image","public_id","removeImage","onError","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Notifications, { notify } from 'react-notify-toast'\n// import Spinner from './Spinner'\nimport Images from './Images'\nimport Buttons from './Buttons'\nimport WakeUp from './WakeUp'\nimport { API_URL } from './config'\nimport './Uploader.css'\n\nconst toastColor = { \n  background: '#505050', \n  text: '#fff' \n}\n\nexport default class Uploader extends Component {\n  \n  state = {\n    loading: true,\n    uploading: false,\n    images: []\n  }\n\n  componentDidMount() {\n    fetch(`${API_URL}/wake-up`)\n      .then(res => {\n        if (res.ok) {\n          return this.setState({ loading: false })  \n        }\n        const msg = 'Something is went wrong with Heroku' \n        this.toast(msg, 'custom', 2000, toastColor)\n      })\n  }\n\n  toast = notify.createShowQueue()\n\n  onChange = e => {\n    const errs = [] \n    const files = Array.from(e.target.files)\n\n    if (files.length > 3) {\n      const msg = 'Only 3 images can be uploaded at a time'\n      return this.toast(msg, 'custom', 2000, toastColor)  \n    }\n\n    const formData = new FormData()\n    const types = ['image/png', 'image/jpeg', 'image/gif']\n\n    files.forEach((file, i) => {\n\n      if (types.every(type => file.type !== type)) {\n        errs.push(`'${file.type}' is not a supported format`)\n      }\n\n      if (file.size > 150000) {\n        errs.push(`'${file.name}' is too large, please pick a smaller file`)\n      }\n\n      formData.append(i, file)\n    })\n\n    if (errs.length) {\n      return errs.forEach(err => this.toast(err, 'custom', 2000, toastColor))\n    }\n\n    this.setState({ uploading: true })\n\n    fetch(`${API_URL}/image-upload`, {\n      method: 'POST',\n      body: formData\n    })\n    .then(res => {\n      if (!res.ok) {\n        throw res\n      }\n      return res.json()\n    })\n    .then(images => {\n      this.setState({\n        uploading: false, \n        images\n      })\n    })\n    .catch(err => {\n      err.json().then(e => {\n        this.toast(e.message, 'custom', 2000, toastColor)\n        this.setState({ uploading: false })\n      })\n    })\n  }\n\n  filter = id => {\n    return this.state.images.filter(image => image.public_id !== id)\n  }\n\n  removeImage = id => {\n    this.setState({ images: this.filter(id) })\n  }\n\n  onError = id => {\n    this.toast('Oops, something went wrong', 'custom', 2000, toastColor)\n    this.setState({ images: this.filter(id) })\n  }\n  \n  render() {\n    const { loading, uploading, images } = this.state\n    \n    const content = () => {\n      switch(true) {\n        case loading:\n          return <WakeUp />\n        case uploading:\n          return \"Loading ...\"\n        case images.length > 0:\n          return <Images \n                  images={images} \n                  removeImage={this.removeImage} \n                  onError={this.onError}\n                 />\n        default:\n          return <Buttons onChange={this.onChange} />\n      }\n    }\n\n    return (\n      <div className='container'>\n        <Notifications />\n        <div className='buttons'>\n          {content()}\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}